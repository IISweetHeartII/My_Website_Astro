---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { getUrl } from '../utils/url';

interface Props extends Pick<CollectionEntry<'blog'>, 'data'> {}

const {
    data: {
        title,
        subtitle,
        description = '',
        created_date,
        updated_date,
        featured_image,
        featured_image_alt,
        tags = [],
        meta_title,
        meta_description,
        canonical_url,
        og_title,
        og_description,
        og_image,
        og_type,
        twitter_title,
        twitter_description,
        twitter_image,
        twitter_card,
        keywords,
        author,
        no_index,
    }
} = Astro.props;

const safeTags = tags ?? [];
---

<html lang="ko">
	<head>
		<BaseHead
			title={title ?? ''}
			description={description ?? ''}
			featured_image={featured_image ?? ''}
			featured_image_alt={featured_image_alt ?? ''}
			meta_title={meta_title ?? ''}
			meta_description={meta_description ?? ''}
			canonical_url={canonical_url ?? ''}
			og_title={og_title ?? ''}
			og_description={og_description ?? ''}
			og_image={og_image ?? ''}
			og_type={og_type ?? ''}
			twitter_title={twitter_title ?? ''}
			twitter_description={twitter_description ?? ''}
			twitter_image={twitter_image ?? ''}
			twitter_card={twitter_card ?? ''}
			keywords={[...safeTags, ...(keywords || [])]}
			author={author ?? ''}
			no_index={no_index}
		/>
		<style>
			:global(.mermaid) {
				background: rgb(248, 250, 252);
				padding: 1.5rem;
				border-radius: 0.5rem;
				margin: 1rem 0;
			}
		</style>
	</head>

	<body class="min-h-screen flex flex-col m-0">
		<Header />
		<main class="flex-1 w-full max-w-[calc(100%-2em)] md:max-w-[920px] mx-auto p-4">
			<article>
				<div class="prose">
					<div class="title mb-4 py-4 text-center leading-none">
						{created_date && (
							<div class="date mb-2 text-gray-700">
								<FormattedDate date={created_date} />
								{updated_date && updated_date > created_date && (
									<span> (Updated: <FormattedDate date={updated_date} />)</span>
								)}
							</div>
						)}
						<h1 class="m-0 mb-2 text-3xl md:text-4xl font-bold text-gray-900">{title}</h1>
						{subtitle && <div class="subtitle text-xl text-gray-700 mb-4">{subtitle}</div>}
						{safeTags.length > 0 && (
							<div class="tags flex flex-wrap gap-2 my-4 justify-center">
								{safeTags.map((tag: string) => (
									<a href={getUrl(`/tag/${tag}/`)} class="tag bg-gray-100 text-gray-700 px-3 py-0.5 rounded-full text-sm no-underline transition-all duration-200 hover:bg-gray-400 hover:text-gray-900 hover:-translate-y-px">#{tag}</a>
								))}
							</div>
						)}
						{featured_image && typeof featured_image === 'string' && (
							<div class="hero-image w-full">
								<img
									width={1020}
									height={510}
									src={featured_image}
									alt={featured_image_alt || ''}
									class="block mx-auto rounded-xl shadow"
								/>
							</div>
						)}
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
		<script>
			import mermaid from 'mermaid';
			document.addEventListener('astro:page-load', () => {
				mermaid.initialize({ 
					startOnLoad: true,
					theme: 'default'
				});
			});
		</script>
	</body>
</html>