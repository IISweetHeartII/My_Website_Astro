---
import BaseHead from '@/components/layout/BaseHead.astro';
import Header from '@/components/layout/Header.astro';
import Footer from '@/components/layout/Footer.astro';
import BlogCard from '@/components/ui/BlogCard.astro';
import ImprovedTagFilter from '@/components/features/ImprovedTagFilter.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
    const posts = await getCollection('blog', ({ data }: CollectionEntry<'blog'>) => {
        return data.publish !== false;
    });

    // Get all unique tags
    const tags = [...new Set(posts.flatMap((post: CollectionEntry<'blog'>) => post.data.tags ?? []))];
    
    // Add "all" tag that shows all posts
    return [
        {
            params: { tag: 'all' },
            props: { posts, tag: 'all' }
        },
        ...tags.map(tag => ({
            params: { tag },
            props: {
                posts: posts.filter((post: CollectionEntry<'blog'>) => post.data.tags?.includes(tag)),
                tag
            }
        }))
    ];
}

const { tag } = Astro.params;
const { posts } = Astro.props;

// Sort posts by date
const sortedPosts = [...posts].sort((a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) => {
    const dateA = a.data.created_date ?? new Date(0);
    const dateB = b.data.created_date ?? new Date(0);
    return dateB.valueOf() - dateA.valueOf();
});

const isAllPosts = tag === 'all';
const title = isAllPosts ? 'All Posts' : `Posts tagged with #${tag}`;
const description = isAllPosts 
    ? 'Browse all articles and insights from our blog.'
    : `Browse all articles and insights related to ${tag}.`;

const allTags: string[] = [...new Set((await getCollection('blog')).flatMap((post: CollectionEntry<'blog'>) => (post.data.tags ?? []) as string[]))];
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead title={title} description={description} />
        
    </head>
    <body class="min-h-screen flex flex-col m-0" data-all-tags={JSON.stringify(allTags)}>
        <Header />
        <main class="flex-1 w-full max-w-screen-xl mx-auto p-8 flex flex-col">
            <section class="text-center mb-12 p-16 bg-surface-light rounded-3xl dark:bg-brand-primary md:p-12 md:mb-8">
                <h1 class="text-4xl md:text-5xl font-extrabold text-text-default mb-4 leading-tight dark:text-surface-light">{title}</h1>
                <p class="text-lg text-text-default max-w-2xl mx-auto leading-relaxed dark:text-text-default">{description}</p>
            </section>

            <section class="mb-8">
                <ImprovedTagFilter allTags={allTags} currentTag={tag} />
            </section>

            {sortedPosts.length > 0 ? (
                <section class="flex-1">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                        {sortedPosts.map((post: CollectionEntry<'blog'>) => (
                            <BlogCard
                                title={post.data.title}
                                description={post.data.description ?? undefined}
                                date={post.data.created_date ?? undefined}
                                slug={post.data.slug ?? post.id.replace(/\.[^/.]+$/, '')}
                                dataTitle={post.data.title}
                                dataTags={JSON.stringify(post.data.tags ?? [])}
                                dataDescription={post.data.description ?? ''}
                            />
                        ))}
                    </div>
                </section>
            ) : (
                <section class="flex-1 text-center py-16 text-text-default text-lg dark:text-text-default">
                     <div class="text-text-default mb-4">
                        <svg class="w-24 h-24 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
                        </svg>
                      </div>
                      <h3 class="text-xl font-semibold text-text-default mb-2 dark:text-surface-light">'#{tag}' 태그가 있는 포스트가 없습니다</h3>
                      <p class="text-text-default dark:text-text-default">다른 태그를 선택하거나 나중에 다시 확인해주세요!</p>
                </section>
            )}
        </main>
        <Footer />
    </body>
</html> 