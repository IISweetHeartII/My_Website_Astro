---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Supabase 연결 테스트">
  <div class="min-h-screen flex items-center justify-center bg-background-light">
    <div class="bg-white p-8 rounded-lg shadow-lg max-w-2xl mx-4">
      <h1 class="text-2xl font-bold text-text mb-4">Supabase 연결 테스트</h1>
      
      <div class="space-y-4">
        <div>
          <h2 class="text-lg font-semibold mb-2">환경 변수 확인</h2>
          <div id="env-check" class="bg-gray-100 p-4 rounded text-sm font-mono"></div>
        </div>
        
        <div>
          <h2 class="text-lg font-semibold mb-2">Supabase 연결 테스트</h2>
          <button id="test-connection" class="bg-accent text-text px-4 py-2 rounded-lg font-medium hover:bg-accent-light">
            연결 테스트
          </button>
          <div id="connection-result" class="mt-2 p-4 rounded bg-gray-100 hidden"></div>
        </div>
        
        <div>
          <h2 class="text-lg font-semibold mb-2">Google OAuth 테스트</h2>
          <button id="test-oauth" class="bg-primary text-white px-4 py-2 rounded-lg font-medium hover:bg-primary-light">
            Google 로그인 테스트
          </button>
          <div id="oauth-result" class="mt-2 p-4 rounded bg-gray-100 hidden"></div>
        </div>
        
        <div>
          <h2 class="text-lg font-semibold mb-2">현재 세션 확인</h2>
          <button id="check-session" class="bg-info text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-600">
            세션 확인
          </button>
          <div id="session-result" class="mt-2 p-4 rounded bg-gray-100 hidden"></div>
        </div>
      </div>
      
      <div class="mt-6">
        <a href="/" class="bg-text-muted text-white px-4 py-2 rounded-lg font-medium hover:bg-primary">
          홈으로 돌아가기
        </a>
      </div>
    </div>
  </div>

  <script>
    import { supabase, signInWithGoogle } from '../lib/supabase';

    // 환경 변수 확인
    const envCheck = document.getElementById('env-check');
    if (envCheck) {
      const envInfo = `
URL: ${import.meta.env.PUBLIC_SUPABASE_URL || 'undefined'}
Key: ${import.meta.env.PUBLIC_SUPABASE_ANON_KEY ? '***' + import.meta.env.PUBLIC_SUPABASE_ANON_KEY.slice(-10) : 'undefined'}
Current Origin: ${window.location.origin}
Current URL: ${window.location.href}
      `.trim();
      envCheck.textContent = envInfo;
    }

    // 연결 테스트
    const testConnectionBtn = document.getElementById('test-connection');
    const connectionResult = document.getElementById('connection-result');
    
    if (testConnectionBtn && connectionResult) {
      testConnectionBtn.addEventListener('click', async () => {
        connectionResult.classList.remove('hidden');
        connectionResult.innerHTML = '<div class="text-blue-600">테스트 중...</div>';
        
        try {
          console.log('Supabase 연결 테스트 시작');
          
          // 단순 연결 테스트
          const { data, error } = await supabase.auth.getSession();
          
          if (error) {
            throw error;
          }
          
          connectionResult.innerHTML = `
            <div class="text-green-600">✅ 연결 성공!</div>
            <pre class="text-xs mt-2 overflow-auto">${JSON.stringify(data, null, 2)}</pre>
          `;
          
        } catch (error) {
          console.error('연결 테스트 오류:', error);
          connectionResult.innerHTML = `
            <div class="text-red-600">❌ 연결 실패</div>
            <div class="text-xs mt-2">
              <strong>오류:</strong> ${error.message}<br>
              <strong>스택:</strong> ${error.stack?.substring(0, 200)}...
            </div>
          `;
        }
      });
    }

    // OAuth 테스트
    const testOAuthBtn = document.getElementById('test-oauth');
    const oauthResult = document.getElementById('oauth-result');
    
    if (testOAuthBtn && oauthResult) {
      testOAuthBtn.addEventListener('click', async () => {
        oauthResult.classList.remove('hidden');
        oauthResult.innerHTML = '<div class="text-blue-600">OAuth 테스트 중...</div>';
        
        try {
          console.log('OAuth 테스트 시작');
          
          const { data, error } = await signInWithGoogle();
          
          if (error) {
            throw error;
          }
          
          oauthResult.innerHTML = `
            <div class="text-green-600">✅ OAuth 설정 성공!</div>
            <div class="text-xs mt-2">리다이렉션이 시작됩니다...</div>
          `;
          
        } catch (error) {
          console.error('OAuth 테스트 오류:', error);
          oauthResult.innerHTML = `
            <div class="text-red-600">❌ OAuth 실패</div>
            <div class="text-xs mt-2">
              <strong>오류:</strong> ${error.message}<br>
              <strong>상세:</strong> ${error.stack?.substring(0, 200)}...
            </div>
          `;
        }
      });
    }

    // 세션 확인
    const checkSessionBtn = document.getElementById('check-session');
    const sessionResult = document.getElementById('session-result');
    
    if (checkSessionBtn && sessionResult) {
      checkSessionBtn.addEventListener('click', async () => {
        sessionResult.classList.remove('hidden');
        sessionResult.innerHTML = '<div class="text-blue-600">세션 확인 중...</div>';
        
        try {
          console.log('세션 확인 시작');
          
          const { data: { session }, error } = await supabase.auth.getSession();
          
          if (error) {
            throw error;
          }
          
          sessionResult.innerHTML = `
            <div class="text-green-600">✅ 세션 확인 완료</div>
            <pre class="text-xs mt-2 overflow-auto">${JSON.stringify(session, null, 2)}</pre>
          `;
          
        } catch (error) {
          console.error('세션 확인 오류:', error);
          sessionResult.innerHTML = `
            <div class="text-red-600">❌ 세션 확인 실패</div>
            <div class="text-xs mt-2">
              <strong>오류:</strong> ${error.message}
            </div>
          `;
        }
      });
    }
  </script>
</Layout> 