---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import { getUrl } from '../utils/url';
---

<header class="sticky top-0 z-50 bg-[#485E8E] border-b border-[#8590B3] transition-colors duration-200">
	<nav class="container mx-auto px-4 h-16 flex items-center justify-between">
		<div class="flex items-center">
			<a href={getUrl('/')} class="flex items-center space-x-2 text-[#F9FAFB] font-semibold text-lg hover:text-[#00FF6A] transition-colors duration-200 hover:bg-[#F9FAFB] hover:bg-opacity-10 rounded px-2 -ml-2 py-1 transition duration-300">
				<img src={getUrl('/images/design/icon.png')} alt="Log8 Icon" class="w-6 h-6 rounded-md hover:scale-105 transition-transform duration-300" />
				<span>{SITE_TITLE}</span>
			</a>
		</div>

		<div class="hidden md:flex items-center space-x-6">
			<HeaderLink href={getUrl('/')}>Home</HeaderLink>
			<HeaderLink href={getUrl('/who-is-dh')}>Who is 덕환</HeaderLink>
			<HeaderLink href={getUrl('/blog')}>Blog</HeaderLink>
			<HeaderLink href={getUrl('/youtube')}>YouTube</HeaderLink>
			<HeaderLink href={getUrl('/showcase')}>Showcase</HeaderLink>
			<HeaderLink href={getUrl('/now')}>Now</HeaderLink>
			<HeaderLink href={getUrl('/portfolio')}>Portfolio</HeaderLink>
		</div>

		<div class="flex items-center space-x-4">
			
			<a href={getUrl('/contact')} class="hidden md:inline-flex items-center bg-[#8590B3] text-[#F9FAFB] border-0 py-1 px-3 focus:outline-none hover:bg-[#00FF6A] hover:text-[#1F2937] rounded text-base transition-colors duration-200">
		      Contact
		      <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-4 h-4 ml-1" viewBox="0 0 24 24">
		        <path d="M5 12h14M12 5l7 7-7 7"></path>
		      </svg>
		    </a>
			<!-- Mobile menu toggle button -->
			<button class="md:hidden text-[#F9FAFB] focus:outline-none" id="mobile-menu-toggle">
				<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
				</svg>
			</button>
		</div>
	</nav>

	<!-- Mobile menu content (initially hidden) -->
	<div class="md:hidden fixed inset-0 bg-[#485E8E]/95 z-40 transition-transform duration-300 ease-in-out transform translate-x-full" id="mobile-menu">
		<div class="flex justify-end p-4">
			<button class="text-[#F9FAFB] focus:outline-none" id="mobile-menu-close">
				<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
				</svg>
			</button>
		
		</div>
		<nav class="flex flex-col items-center space-y-6 py-8">
			<a href={getUrl('/')} class="text-[#F9FAFB] hover:text-[#00FF6A] text-xl font-semibold transition-colors duration-200">Home</a>
			<a href={getUrl('/who-is-dh')} class="text-[#F9FAFB] hover:text-[#00FF6A] text-xl font-semibold transition-colors duration-200">Who is 덕환</a>
			<a href={getUrl('/blog')} class="text-[#F9FAFB] hover:text-[#00FF6A] text-xl font-semibold transition-colors duration-200">Blog</a>
			<a href={getUrl('/youtube')} class="text-[#F9FAFB] hover:text-[#00FF6A] text-xl font-semibold transition-colors duration-200">YouTube</a>
			<a href={getUrl('/showcase')} class="text-[#F9FAFB] hover:text-[#00FF6A] text-xl font-semibold transition-colors duration-200">Showcase</a>
			<a href={getUrl('/now')} class="text-[#F9FAFB] hover:text-[#00FF6A] text-xl font-semibold transition-colors duration-200">Now</a>
			<a href={getUrl('/portfolio')} class="text-[#F9FAFB] hover:text-[#00FF6A] text-xl font-semibold transition-colors duration-200">Portfolio</a>
			<a href={getUrl('/contact')} class="text-[#F9FAFB] hover:text-[#00FF6A] text-xl font-semibold transition-colors duration-200">Contact</a>
		</nav>
	</div>
</header>

<script>
	const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
	const mobileMenu = document.getElementById('mobile-menu');
	const mobileMenuClose = document.getElementById('mobile-menu-close');

	if (mobileMenuToggle) {
		mobileMenuToggle.addEventListener('click', () => {
			if (mobileMenu) {
				mobileMenu.classList.remove('translate-x-full');
				mobileMenu.classList.add('translate-x-0');
			}
		});
	}

	if (mobileMenuClose) {
		mobileMenuClose.addEventListener('click', () => {
			if (mobileMenu) {
				mobileMenu.classList.remove('translate-x-0');
				mobileMenu.classList.add('translate-x-full');
			}
		});
	}

	// Close menu when a link is clicked
	if (mobileMenu) {
		mobileMenu.querySelectorAll('a').forEach(link => {
			link.addEventListener('click', () => {
				if (mobileMenu) {
					mobileMenu.classList.remove('translate-x-0');
					mobileMenu.classList.add('translate-x-full');
				}
			});
		});
	}

	// Close menu when clicking outside
	window.addEventListener('click', (event) => {
		const target = event.target as Node; // Cast event.target to Node
		if (mobileMenu && mobileMenuToggle && !mobileMenu.contains(target) && !mobileMenuToggle.contains(target)) {
			mobileMenu.classList.remove('translate-x-0');			
			mobileMenu.classList.add('translate-x-full');
		}
	});
</script>
